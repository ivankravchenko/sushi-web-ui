// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v5.29.3
// source: api_version.proto

/* eslint-disable */
import { BinaryReader, BinaryWriter } from "@bufbuild/protobuf/wire";

export const protobufPackage = "sushi_rpc";

/**
 * To check that the version of sushi you are controlling matches the gRPC api version,
 *  the return value from GetSushiApiVersion() should match the default value below
 */
export interface ApiVersion {
  value: string;
}

function createBaseApiVersion(): ApiVersion {
  return { value: "1.2.0" };
}

export const ApiVersion: MessageFns<ApiVersion> = {
  encode(message: ApiVersion, writer: BinaryWriter = new BinaryWriter()): BinaryWriter {
    if (message.value !== "1.2.0") {
      writer.uint32(10).string(message.value);
    }
    return writer;
  },

  decode(input: BinaryReader | Uint8Array, length?: number): ApiVersion {
    const reader = input instanceof BinaryReader ? input : new BinaryReader(input);
    const end = length === undefined ? reader.len : reader.pos + length;
    const message = createBaseApiVersion();
    while (reader.pos < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1: {
          if (tag !== 10) {
            break;
          }

          message.value = reader.string();
          continue;
        }
      }
      if ((tag & 7) === 4 || tag === 0) {
        break;
      }
      reader.skip(tag & 7);
    }
    return message;
  },

  fromJSON(object: any): ApiVersion {
    return { value: isSet(object.value) ? globalThis.String(object.value) : "1.2.0" };
  },

  toJSON(message: ApiVersion): unknown {
    const obj: any = {};
    if (message.value !== "1.2.0") {
      obj.value = message.value;
    }
    return obj;
  },

  create(base?: DeepPartial<ApiVersion>): ApiVersion {
    return ApiVersion.fromPartial(base ?? {});
  },
  fromPartial(object: DeepPartial<ApiVersion>): ApiVersion {
    const message = createBaseApiVersion();
    message.value = object.value ?? "1.2.0";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends globalThis.Array<infer U> ? globalThis.Array<DeepPartial<U>>
  : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}

export interface MessageFns<T> {
  encode(message: T, writer?: BinaryWriter): BinaryWriter;
  decode(input: BinaryReader | Uint8Array, length?: number): T;
  fromJSON(object: any): T;
  toJSON(message: T): unknown;
  create(base?: DeepPartial<T>): T;
  fromPartial(object: DeepPartial<T>): T;
}
